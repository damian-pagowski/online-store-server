name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch: # Manual trigger for E2E tests

jobs:
  unit-tests:
    name: ðŸ”¥ Run Unit Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Dependencies
      run: npm i

    - name: Run Unit Tests
      run: npm run test:unit -- --reporters=default --reporters=jest-junit
      env:
        JEST_JUNIT_OUTPUT: ./coverage/junit-unit.xml

    - name: Upload Unit Test Results
      uses: actions/upload-test-results@v2
      with:
        files: '**/junit-unit.xml'

    - name: Upload Coverage
      uses: actions/upload-artifact@v3
      with:
        name: unit-coverage-report
        path: coverage/

  integration-tests:
    name: ðŸ”¥ Run Integration Tests
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Setup MongoDB (for integration tests)
      uses: supercharge/mongodb-github-action@1.8.0
      with:
        mongodb-version: '5.0'

    - name: Install Dependencies
      run: npm i

    - name: Run Integration Tests
      env: 
        MONGO_URI: mongodb://localhost:27017/testdb
      run: npm run test:integration -- --reporters=default --reporters=jest-junit
      env:
        JEST_JUNIT_OUTPUT: ./coverage/junit-integration.xml

    - name: Upload Integration Test Results
      uses: actions/upload-test-results@v2
      with:
        files: '**/junit-integration.xml'

    - name: Upload Coverage
      uses: actions/upload-artifact@v3
      with:
        name: integration-coverage-report
        path: coverage/

  e2e-tests:
    name: ðŸš€ Run E2E Tests (Manual Trigger)
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' # Run only on manual trigger

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Newman CLI
      run: npm install -g newman

    - name: Run E2E Tests
      run: npm run test:e2e --reporters=junit
      env:
        JEST_JUNIT_OUTPUT: ./coverage/junit-e2e.xml

    - name: Upload E2E Test Results
      uses: actions/upload-test-results@v2
      with:
        files: '**/junit-e2e.xml'